# SPDX-License-Identifier: Apache-2.0
name: System contracts testing
'on':
  workflow_dispatch:
  push:
    paths:
      - system-contract-testing/**
      - .github/workflows/system-contracts-testing.yaml
  pull_request:
    paths:
      - system-contract-testing/**
defaults:
  run:
    shell: bash
permissions:
  checks: write
  contents: read
  actions: write
  statuses: write
  id-token: write
env:
  SOLO_CLUSTER_NAME: solo-system-contracts-e2e
  SOLO_NAMESPACE: ssolo-system-contracts-e2e
  SOLO_DEPLOYMENT: solo-system-contracts-deployment
  SOLO_CLUSTER_SETUP_NAMESPACE: solo-setup
  GRADLE_EXEC: ionice -c 2 -n 2 nice -n 19 ./gradlew
jobs:
  system-contracts-regression:
    name: Standard
    runs-on: smart-contracts-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          egress-policy: audit
      - name: Checkout Consensus Node
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          repository: hiero-ledger/hiero-consensus-node
          ref: 20599-HIP-1215-Finish-Java-integration-with-services
          fetch-depth: 0
      - name: Checkout Code
        id: checkout-code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ''
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          repository: hiero-ledger/hiero-consensus-node
          ref: 20599-HIP-1215-Finish-Java-integration-with-services
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00
        with:
          distribution: temurin
          java-version: 21.0.6
      # Set up the node environment
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96
        with:
          cache-read-only: false
      - name: Build hiero-consensus-node
        run: '${GRADLE_EXEC} assemble'
      - name: Setup NodeJS Environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
      - name: Install npm testing dependencies
        run: npm ci
        working-directory: system-contract-testing/
      - name: Install Solo
        run: npm install -g @hashgraph/solo@latest
      - name: Setup Kind
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3
        with:
          install_only: true
          node_image: >-
            kindest/node:v1.31.4@sha256:2cb39f7295fe7eafee0842b1052a599a4fb0f8bcf3f83d96c7f4864c357c6c30
          version: v0.26.0
          kubectl_version: v1.31.4
          verbosity: 3
          wait: 120s
      - name: Configure and run solo
        run: >
          kind create cluster -n "${SOLO_CLUSTER_NAME}"

          solo init

          solo cluster-ref connect --cluster-ref kind-${SOLO_CLUSTER_NAME}
          --context kind-${SOLO_CLUSTER_NAME}

          solo deployment create -n "${SOLO_NAMESPACE}" --deployment
          "${SOLO_DEPLOYMENT}"

          solo deployment add-cluster --deployment "${SOLO_DEPLOYMENT}"
          --cluster-ref kind-${SOLO_CLUSTER_NAME} --num-consensus-nodes 1

          solo node keys --gossip-keys --tls-keys --deployment
          "${SOLO_DEPLOYMENT}"

          solo cluster-ref setup -s "${SOLO_CLUSTER_SETUP_NAMESPACE}"

          solo network deploy --deployment "${SOLO_DEPLOYMENT}"

          solo node setup --deployment "${SOLO_DEPLOYMENT}" --local-build-path
          ./hedera-node/data

          solo node start --deployment "${SOLO_DEPLOYMENT}"

          solo mirror-node deploy --deployment "${SOLO_DEPLOYMENT}"
          --cluster-ref kind-${SOLO_CLUSTER_NAME} --enable-ingress --pinger
      - name: Run the tests
        run: |
          npx hardhat test --network local
        working-directory: ./system-contract-testing
      - name: Stop solo
        if: '${{ always() }}'
        run: |
          kind delete cluster -n ${{ env.SOLO_CLUSTER_NAME }}
